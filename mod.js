// Copyright (c) 2023 The Stdlib Authors. License is Apache-2.0: http://www.apache.org/licenses/LICENSE-2.0
/// <reference types="./mod.d.ts" />
var r="function"==typeof Object.defineProperty?Object.defineProperty:null;var e,t=Object.defineProperty,n=Object.prototype,o=n.toString,a=n.__defineGetter__,i=n.__defineSetter__,u=n.__lookupGetter__,l=n.__lookupSetter__;function f(r){return Math.abs(r)}e=function(){try{return r({},"x",{}),!0}catch(r){return!1}}()?t:function(r,e,t){var f,c,_,p;if("object"!=typeof r||null===r||"[object Array]"===o.call(r))throw new TypeError("invalid argument. First argument must be an object. Value: `"+r+"`.");if("object"!=typeof t||null===t||"[object Array]"===o.call(t))throw new TypeError("invalid argument. Property descriptor must be an object. Value: `"+t+"`.");if((c="value"in t)&&(u.call(r,e)||l.call(r,e)?(f=r.__proto__,r.__proto__=n,delete r[e],r[e]=t.value,r.__proto__=f):r[e]=t.value),_="get"in t,p="set"in t,c&&(_||p))throw new Error("invalid argument. Cannot specify one or more accessors and a value or writable attribute in the property descriptor.");return _&&a&&a.call(r,e,t.get),p&&i&&i.call(r,e,t.set),r};function c(r,e,t){var n,o,a;if(n=0,r<=0||t<=0)return n;if(1===t){if((o=r%6)>0)for(a=0;a<o;a++)n+=f(e[a]);if(r<6)return n;for(a=o;a<r;a+=6)n+=f(e[a])+f(e[a+1])+f(e[a+2])+f(e[a+3])+f(e[a+4])+f(e[a+5]);return n}for(r*=t,a=0;a<r;a+=t)n+=f(e[a]);return n}function _(r,e,t,n){var o,a,i,u;if(o=0,r<=0)return o;if(a=n,1===t){if((i=r%6)>0)for(u=0;u<i;u++)o+=f(e[a]),a+=t;if(r<6)return o;for(u=i;u<r;u+=6)o+=f(e[a])+f(e[a+1])+f(e[a+2])+f(e[a+3])+f(e[a+4])+f(e[a+5]),a+=6;return o}for(u=0;u<r;u++)o+=f(e[a]),a+=t;return o}e(c,"ndarray",{configurable:!1,enumerable:!1,writable:!1,value:_});export{c as default,_ as ndarray};
//# sourceMappingURL=mod.js.map
